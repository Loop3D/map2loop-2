name: publish_conda

on:
   push:
      branches:
         - master
jobs:
  conda-deploy:
    name: Uploading to Loop3d for python ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest",  "windows-latest"] #"macos-latest",
        python-version: ["3.7","3.8","3.9"]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
    
      - uses: actions/checkout@v2
      - name: update submodules
#       shell: bash -l {0}
        run: |
            git submodule update --init --recursive
      - name: Add msbuild to PATH
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.0.2  
      - name: Conda build'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN  }}
        shell: bash -l {0}
        run: |
           conda install -c conda-forge -c loop3d conda-build scikit-build cython anaconda-client conda-verify -y
           conda build -c conda-forge -c loop3d --python ${{ matrix.python-version }} --output-folder conda conda
      - name: upload windows
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN  }}
        if: matrix.os == 'windows-latest'
        shell: bash -l {0}
        run: |
           anaconda upload --label main conda/win-64/*.tar.bz2 
      - name: upload linux
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN  }}
        if: matrix.os == 'ubuntu-latest'
        shell: bash -l {0}
        run: |
           anaconda upload --label main conda/linux-64/*.tar.bz2 
      - name: upload macosx
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN  }}
        if: matrix.os == 'macos-latest'
        shell: bash -l {0}
        run: |
            anaconda upload --label main conda/osx-64/*.tar.bz2
#   unix_package:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - uses: conda-incubator/setup-miniconda@v2
#         with:
#           auto-activate-base: true
#           installer-url: https://github.com/conda-forge/miniforge/releases/download/4.10.1-0/Miniforge-pypy3-4.10.1-0-Linux-x86_64.sh
#           channels: anaconda,conda-forge,loop3d,conda-forge/label/cf202003
#           python-version: 3.7

#       - name: Building and uploading m2l pkg for linux, osx and windows
#         shell: bash -l {0}
#         env:
#           ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
#         run: |
#             conda env list
#             conda install conda-build anaconda-client conda-verify -y
#             python setup.py develop
#             cd conda
#             python conda-build.py

  #windows_package:
    #runs-on: windows-2019
    #strategy:
      #matrix:
        #python: ['3.7']
    #steps:
      #- uses: actions/checkout@v2
      #- name: msbuild to path
        #uses: microsoft/setup-msbuild@v1.0.2
      #- uses: conda-incubator/setup-miniconda@v2
        #with:
          #python-version: ${{ matrix.python }} 
      #- name: conda build
        #shell: powershell
        #run: |
          #python --version
          #conda install -c conda-build anacona-client -y
          #conda build -c anaconda -c conda-forge -c loop3d -c --output-folder . .
      #- name: conda upload
        #shell: powershell
        #env:
          #ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        #run: | 
          #anaconda upload win-64/*.tar.bz2 

